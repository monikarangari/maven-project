pipeline
{
agent any
stages 

{ stage ('scm_checkout')
  { steps { git branch: 'master', url: 'https://github.com/monikarangari/maven-project' } }


  stage ('execute unit test')
  {steps { withMaven(globalMavenSettingsConfig: '8846345d-0059-40fc-a95a-ae844f01f5e6', jdk: 'LOCAL_JDK', maven: 'LOCAL_MVN', mavenSettingsConfig: 'ca3190ae-99f2-4169-bdb2-6f7ee32aeac8', traceability: true) 
             {sh 'mvn test'} 
 }}


stage ('build the code')
{ steps { withMaven(globalMavenSettingsConfig: '8846345d-0059-40fc-a95a-ae844f01f5e6', jdk: 'LOCAL_JDK', maven: 'LOCAL_MVN', mavenSettingsConfig: 'ca3190ae-99f2-4169-bdb2-6f7ee32aeac8', traceability: true) 
 {  sh 'mvn package' } 
} } 

stage ('docker build and push')
{ steps { // This step should not normally be used in your script. Consult the inline help for details.
withDockerRegistry(credentialsId: 'ecr:us-east-1:aws', url: 'https://040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-demo')
{ sh 'docker build -t  040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-demo:latest .'
sh 'docker push 040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-demo:latest'} 
} }

stage ('eks deployment')
{ steps { withAWS(credentials: 'aws', region: 'us-east-1')
{ sh 'aws sts get-caller-identity'
  sh 'aws eks --region us-east-1 update-kubeconfig --name my-eks-demo'
  sh 'helm package helm/.'
  sh 'helm upgrade mydemoapp-0.1.0.tgz helm/.'}
} }

}}
